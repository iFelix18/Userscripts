// ==UserScript==
// @author          Felix
// @namespace       https://github.com/iFelix18
// @exclude         *
// ==UserLibrary==
// @name            TMDb API
// @description     TMDb API for userscripts
// @copyright       2020, Felix (https://github.com/iFelix18)
// @license         MIT
// @version         1.0.0
// @homepageURL     https://github.com/iFelix18/Userscripts
// @supportURL      https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @require         https://cdn.jsdelivr.net/gh/greasemonkey/gm4-polyfill@master/gm4-polyfill.js
// @include         *
// @connect         api.themoviedb.org
// @grant           GM.xmlHttpRequest
// @grant           GM_xmlhttpRequest
// ==/UserScript==
(()=>{"use strict";this.TMDb=class{constructor(e={}){if(!e.apikey)throw Error("TMDb API Key is required");this.config={apikey:e.apikey,language:e.language||"en",url:e.url||"https://api.themoviedb.org/3",debug:e.debug||!1},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8"}}moviesDetails(e){return new Promise((s,t)=>{GM.xmlHttpRequest({method:"GET",url:`${this.config.url}/movie/${e}?api_key=${this.config.apikey}&language=${this.config.language}`,headers:this._headers,onload:e=>{if(e.readyState===e.DONE&&"[]"!==e.responseText){!0===this.config.debug&&console.log(e);const t=JSON.parse(e.responseText);s(t)}else t(e)}})})}tvDetails(e){return new Promise((s,t)=>{GM.xmlHttpRequest({method:"GET",url:`${this.config.url}/tv/${e}?api_key=${this.config.apikey}&language=${this.config.language}`,headers:this._headers,onload:e=>{if(e.readyState===e.DONE&&"[]"!==e.responseText){!0===this.config.debug&&console.log(e);const t=JSON.parse(e.responseText);s(t)}else t(e)}})})}seasonDetails(e,s){return new Promise((t,i)=>{GM.xmlHttpRequest({method:"GET",url:`${this.config.url}/tv/${e}/season/${s}?api_key=${this.config.apikey}&language=${this.config.language}`,headers:this._headers,onload:e=>{if(e.readyState===e.DONE&&"[]"!==e.responseText){!0===this.config.debug&&console.log(e);const s=JSON.parse(e.responseText);t(s)}else i(e)}})})}episodeDetails(e,s,t){return new Promise((i,o)=>{GM.xmlHttpRequest({method:"GET",url:`${this.config.url}/tv/${e}/season/${s}/episode/${t}?api_key=${this.config.apikey}&language=${this.config.language}`,headers:this._headers,onload:e=>{if(e.readyState===e.DONE&&"[]"!==e.responseText){!0===this.config.debug&&console.log(e);const s=JSON.parse(e.responseText);i(s)}else o(e)}})})}}})();