// ==UserScript==
// @author          Davide <iFelix18@protonmail.com>
// @namespace       https://github.com/iFelix18
// @exclude         *
// ==UserLibrary==
// @name            Rotten Tomatoes API
// @description     Rotten Tomatoes API for my userscripts
// @copyright       2022, Davide (https://github.com/iFelix18)
// @license         MIT
// @version         1.0.0
// @homepageURL     https://github.com/iFelix18/Userscripts
// @supportURL      https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @include         *
// @connect         rottentomatoes.com
// @grant           GM.xmlHttpRequest
// ==/UserScript==
(()=>{this.RottenTomatoes=class{constructor(e={}){this._config={url:e.url||"https://www.rottentomatoes.com",debug:e.debug||!1},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8"},this._debug=(e=>{(this._config.debug||200!==e.status)&&console.log(`${e.status}: ${e.finalUrl}`)})}search(e={}){const t={search:e.search||"",type:e.type||void 0,limit:e.limit||25};return new Promise((e,s)=>{GM.xmlHttpRequest({method:"GET",url:`${this._config.url}/api/private/v2.0/search/?q=${encodeURIComponent(t.search)}&t=${t.type}&limit=${t.limit}`,headers:this._headers,onload:r=>{this._debug(r);const o=JSON.parse(r.responseText);4===r.readyState&&"[]"!==r.responseText?e(o):s(""===t.search?new Error("A search query is required."):new Error(r))}})})}}})();