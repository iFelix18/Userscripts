// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/tmdb
// @description  TMDb API for my userscripts
// @copyright    2020, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      2.0.0
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/tmdb#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/tmdb#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @connect      api.themoviedb.org
// @grant        GM.xmlHttpRequest
// ==/UserScript==
this.TMDb=function(){const e={"/configuration/primary_translations":{method:"GET",url:"/configuration/primary_translations"},"/find":{method:"GET",url:"/find/{external_id}?external_source"},"/movie/details":{method:"GET",url:"/movie/{movie_id}"},"/movie/external_ids":{method:"GET",url:"/movie/{movie_id}/external_ids"},"/movie/images":{method:"GET",url:"/movie/{movie_id}/images"},"/tv/details":{method:"GET",url:"/tv/{tv_id}"},"/tv/episode/details":{method:"GET",url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}"},"/tv/episode/external_ids":{method:"GET",url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}/external_ids"},"/tv/episode/images":{method:"GET",url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images"},"/tv/external_ids":{method:"GET",url:"/tv/{tv_id}/external_ids"},"/tv/images":{method:"GET",url:"/tv/{tv_id}/images"},"/tv/season/details":{method:"GET",url:"/tv/{tv_id}/season/{season_number}"},"/tv/season/external_ids":{method:"GET",url:"/tv/{tv_id}/season/{season_number}/external_ids"},"/tv/season/images":{method:"GET",url:"/tv/{tv_id}/season/{season_number}/images"}};return class{constructor(e={}){if(!e.api_key)throw new Error("TMDb API Key is required");this._config={api_key:e.api_key,api_url:e.api_url||"https://api.themoviedb.org/3",language:e.language||"en-US",debug:e.debug||!1},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8"},this._debug=e=>{(this._config.debug||200!==e.status)&&console.log(`${e.status}: ${e.finalUrl}`)},this._this=this,this._methods()}_methods(){for(const s in e){const t=s.split("/"),i=t.pop();t.shift();let o=this._this;for(const e of t)o=o[e]||(o[e]={});o[i]=this._request.bind(this,e[s])}}_request(e,s){return new Promise(((t,i)=>{const o=this._resolve(e,s);GM.xmlHttpRequest({method:e.method,url:o,headers:this._headers,timeout:15e3,onload:e=>{this._debug(e);const s=JSON.parse(e.responseText);4===e.readyState&&200===e.status?t(s):s.status_message?i(new Error(s.status_message)):i(new Error("No results"))},onerror:()=>{i(new Error("An error occurs while processing the request"))},ontimeout:()=>{i(new Error("Request times out"))}})}))}_resolve(e,s){const t=this._config.api_url,i=e.url.split("?"),o=[],r=[];if(i[0])if(s){const e=new RegExp(Object.keys(s).map((e=>`{${e}}`)).join("|"),"gi");o.push(i[0].replace(e,(e=>s[e.replace(/[{}]/g,"")])))}else o.push(i[0]);if(i[1])for(const e of i[1].split("&"))r.push(`${e}=${s[e]}`);return this._config.language&&r.push(`language=${this._config.language}`),r.push(`api_key=${this._config.api_key}`),`${t}${o.join("")}?${r.join("&")}`}}}();
