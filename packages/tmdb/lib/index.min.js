// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/tmdb
// @description  TMDb API for my userscripts
// @copyright    2020, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      2.2.0
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/tmdb#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/tmdb#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @connect      api.themoviedb.org
// @grant        GM.getValue
// @grant        GM.setValue
// @grant        GM.xmlHttpRequest
// ==/UserScript==
this.TMDb=function(){const e={"/configuration/api":{method:"GET",optional:[],url:"/configuration"},"/configuration/primary_translations":{method:"GET",optional:[],url:"/configuration/primary_translations"},"/find":{method:"GET",optional:[],url:"/find/{external_id}?external_source"},"/movie/details":{append_to_response:!0,method:"GET",optional:[],url:"/movie/{movie_id}"},"/movie/external_ids":{method:"GET",optional:[],url:"/movie/{movie_id}/external_ids"},"/movie/images":{method:"GET",optional:["include_image_language"],url:"/movie/{movie_id}/images?include_image_language"},"/tv/details":{append_to_response:!0,method:"GET",optional:[],url:"/tv/{tv_id}"},"/tv/episode/details":{append_to_response:!0,method:"GET",optional:[],url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}"},"/tv/episode/external_ids":{method:"GET",optional:[],url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}/external_ids"},"/tv/episode/images":{method:"GET",optional:["include_image_language"],url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images?include_image_language"},"/tv/external_ids":{method:"GET",optional:[],url:"/tv/{tv_id}/external_ids"},"/tv/images":{method:"GET",optional:["include_image_language"],url:"/tv/{tv_id}/images?include_image_language"},"/tv/season/details":{append_to_response:!0,method:"GET",optional:[],url:"/tv/{tv_id}/season/{season_number}"},"/tv/season/external_ids":{method:"GET",optional:[],url:"/tv/{tv_id}/season/{season_number}/external_ids"},"/tv/season/images":{method:"GET",optional:["include_image_language"],url:"/tv/{tv_id}/season/{season_number}/images?include_image_language"}};return class{constructor(e={},t=e.cache||{}){if(!e.api_key)throw new Error("TMDb API Key is required");this._config={api_key:e.api_key,api_url:e.api_url||"https://api.themoviedb.org/3",language:e.language,debug:e.debug||!1},this._cache={active:t.active||!1,TTL:1e3*(t.time_to_live||3600)},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8"},this._methods()}_this(){return this}_debug(e){this._config.debug&&console.log(`${GM.info.script.name}:`,e)}async _crypto(e){const t=await crypto.subtle.digest("SHA-256",(new TextEncoder).encode(e));return[...new Uint8Array(t)].map((e=>e.toString(16).padStart(2,"0"))).join("")}_methods(){for(const t in e){const o=t.split("/"),i=o.pop();o.shift();let s=this._this();for(const e of o)s=s[e]||(s[e]={});s[i]=this._request.bind(this,e[t])}}async _request(e,t){const o=this._resolve(e,t),i=await this._crypto(o).then().catch((e=>new Error(e))),s=await GM.getValue(i);return await new Promise(((t,a)=>{this._cache.active&&s&&Date.now()-s.time<this._cache.TTL?(this._debug({status:"cached",finalURL:o}),t(s.data)):GM.xmlHttpRequest({method:e.method,url:o,headers:this._headers,timeout:15e3,onload:e=>{this._debug({status:e.status,finalURL:o});const s=e.responseText?JSON.parse(e.responseText):void 0;s&&4===e.readyState&&200===e.status?(this._cache.active&&GM.setValue(i,{data:s,time:Date.now()}),t(s)):s&&s.status_message?a(new Error(s.status_message)):a(new Error("No results"))},onerror:()=>{a(new Error("An error occurs while processing the request"))},ontimeout:()=>{a(new Error("Request times out"))}})}))}_resolve(e,t){const o=e.url.split("?"),i=t?new Set(Object.keys(t).map((e=>`${e}`))):{},s=[],a=[];if(o[0])for(let a of o[0].split("/"))if(/{.+?}/.test(a)){if(a=a.replace(/[{}]/g,""),t&&i.has(a))s.push(encodeURIComponent(t[a]));else if(!e.optional.includes(a))throw new Error(`Missing parameter: ${a}`)}else s.push(a);if(o[1])for(const s of o[1].split("&"))if(t&&i.has(s))a.push(`${s}=${encodeURIComponent(t[s])}`);else if(!e.optional.includes(s))throw new Error(`Missing parameter: ${s}`);a.push(`api_key=${this._config.api_key}`),this._config.language&&a.push(`language=${this._config.language}`),e.append_to_response&&t.append_to_response&&a.push(`append_to_response=${t.append_to_response}`);return`${this._config.api_url}${s.join("/")}${a.length>0?`?${a.join("&")}`:""}`}}}();
