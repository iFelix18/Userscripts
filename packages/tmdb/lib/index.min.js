// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/tmdb
// @description  TMDb API for my userscripts
// @copyright    2020, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      2.1.0
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/tmdb#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/tmdb#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @connect      api.themoviedb.org
// @grant        GM.xmlHttpRequest
// ==/UserScript==
this.TMDb=function(){const e={"/configuration/api":{method:"GET",optional:[],url:"/configuration"},"/configuration/primary_translations":{method:"GET",optional:[],url:"/configuration/primary_translations"},"/find":{method:"GET",optional:[],url:"/find/{external_id}?external_source"},"/movie/details":{append_to_response:!0,method:"GET",optional:[],url:"/movie/{movie_id}"},"/movie/external_ids":{method:"GET",optional:[],url:"/movie/{movie_id}/external_ids"},"/movie/images":{method:"GET",optional:["include_image_language"],url:"/movie/{movie_id}/images?include_image_language"},"/tv/details":{append_to_response:!0,method:"GET",optional:[],url:"/tv/{tv_id}"},"/tv/episode/details":{append_to_response:!0,method:"GET",optional:[],url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}"},"/tv/episode/external_ids":{method:"GET",optional:[],url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}/external_ids"},"/tv/episode/images":{method:"GET",optional:["include_image_language"],url:"/tv/{tv_id}/season/{season_number}/episode/{episode_number}/images?include_image_language"},"/tv/external_ids":{method:"GET",optional:[],url:"/tv/{tv_id}/external_ids"},"/tv/images":{method:"GET",optional:["include_image_language"],url:"/tv/{tv_id}/images?include_image_language"},"/tv/season/details":{append_to_response:!0,method:"GET",optional:[],url:"/tv/{tv_id}/season/{season_number}"},"/tv/season/external_ids":{method:"GET",optional:[],url:"/tv/{tv_id}/season/{season_number}/external_ids"},"/tv/season/images":{method:"GET",optional:["include_image_language"],url:"/tv/{tv_id}/season/{season_number}/images?include_image_language"}};return class{constructor(e={}){if(!e.api_key)throw new Error("TMDb API Key is required");this._config={api_key:e.api_key,api_url:e.api_url||"https://api.themoviedb.org/3",language:e.language,debug:e.debug||!1},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8"},this._methods()}_this(){return this}_debug(e){(this._config.debug||200!==e.status)&&console.log(`${e.status}: ${e.finalUrl}`)}_methods(){for(const o in e){const t=o.split("/"),s=t.pop();t.shift();let i=this._this();for(const e of t)i=i[e]||(i[e]={});i[s]=this._request.bind(this,e[o])}}_request(e,o){return new Promise(((t,s)=>{GM.xmlHttpRequest({method:e.method,url:this._resolve(e,o),headers:this._headers,timeout:15e3,onload:e=>{this._debug(e);const o=e.responseText?JSON.parse(e.responseText):void 0;o&&4===e.readyState&&200===e.status?t(o):o&&o.status_message?s(new Error(o.status_message)):s(new Error("No results"))},onerror:()=>{s(new Error("An error occurs while processing the request"))},ontimeout:()=>{s(new Error("Request times out"))}})}))}_resolve(e,o){const t=e.url.split("?"),s=o?new Set(Object.keys(o).map((e=>`${e}`))):{},i=[],n=[];if(t[0])for(let n of t[0].split("/"))if(/\{.+?\}/.test(n)){if(n=n.replace(/[{}]/g,""),o&&s.has(n))i.push(encodeURIComponent(o[n]));else if(!e.optional.includes(n))throw new Error(`Missing parameter: ${n}`)}else i.push(n);if(t[1])for(const i of t[1].split("&"))if(o&&s.has(i))n.push(`${i}=${encodeURIComponent(o[i])}`);else if(!e.optional.includes(i))throw new Error(`Missing parameter: ${i}`);n.push(`api_key=${this._config.api_key}`),this._config.language&&n.push(`language=${this._config.language}`),e.append_to_response&&o.append_to_response&&n.push(`append_to_response=${o.append_to_response}`);return`${this._config.api_url}${i.join("/")}${n.length>0?`?${n.join("&")}`:""}`}}}();
