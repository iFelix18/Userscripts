// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/jikan
// @description  Jikan API for my userscripts
// @copyright    2022, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      3.0.0
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/jikan#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/jikan#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @connect      api.jikan.moe
// @grant        GM.getValue
// @grant        GM.setValue
// @grant        GM.xmlHttpRequest
// ==/UserScript==
this.Jikan=function(){const e={"/anime/search":{method:"GET",optional:["end_date","genres_exclude","genres","letter","max_score","min_score","order_by","page","producers","query","rating","score","sfw","sort","start_date","status","type"],url:"/anime?end_date={end_date}&genres_exclude={genres_exclude}&genres={genres}&letter={letter}&max_score={max_score}&min_score={min_score}&order_by={order_by}&page={page}&producers={producers}&q={query}&rating={rating}&score={score}&sfw={sfw}&sort={sort}&start_date={start_date}&status={status}&type={type}"}};return class{constructor(e={},t=e.cache||{}){this._config={api_url:e.api_url||"https://api.jikan.moe/v4",limit:e.limit||25,debug:e.debug||!1},this._cache={active:t.active||!1,TTL:1e3*(t.time_to_live||3600)},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8"},this._methods()}_this(){return this}_debug(e){this._config.debug&&console.log(`${e.status} - ${e.finalURL}`)}async _crypto(e){const t=await crypto.subtle.digest("SHA-256",(new TextEncoder).encode(e));return[...new Uint8Array(t)].map((e=>e.toString(16).padStart(2,"0"))).join("")}_methods(){for(const t in e){const s=t.split("/"),r=s.pop();s.shift();let i=this._this();for(const e of s)i=i[e]||(i[e]={});i[r]=this._request.bind(this,e[t])}}async _request(e,t){if(!t)throw new Error("Parameters is required");const s=this._resolve(e,t),r=await this._crypto(s).then().catch((e=>new Error(e))),i=await GM.getValue(r);return new Promise(((t,o)=>{this._cache.active&&i&&Date.now()-i.time<this._cache.TTL?(this._debug({status:"cached",finalURL:s}),t(i.data)):GM.xmlHttpRequest({method:e.method,url:s,headers:this._headers,timeout:15e3,onload:e=>{this._debug({status:e.status,finalURL:s});const i=JSON.parse(e.responseText);i.pagination.items.total>0?(this._cache.active&&GM.setValue(r,{data:i,time:Date.now()}),t(i)):o(new Error("No results"))},onerror:()=>{o(new Error("An error occurs while processing the request"))},ontimeout:()=>{o(new Error("Request times out"))}})}))}_resolve(e,t){const s=e.url.split("?"),r=t?new Set(Object.keys(t).map((e=>`${e}`))):{},i=[],o=[];if(s[0]&&i.push(s[0]),s[1])for(const i of s[1].split("&")){const s=/{(\w+)}/g.exec(i)[1],n=new RegExp(Object.keys(t).map((e=>`{${e}}`)).join("|"),"gi");if(r.has(s))o.push(i.replace(n,(e=>encodeURIComponent(t[e.replace(/[{}]/g,"")]))));else if(!e.optional.includes(s))throw new Error(`Missing parameter => ${s}`)}this._config.limit&&o.push(`limit=${this._config.limit}`);return`${this._config.api_url}${i.join("/")}${o.length>0?`?${o.join("&")}`:""}`}}}();
