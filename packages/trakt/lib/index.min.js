// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/trakt
// @description  Trakt API for my userscripts
// @copyright    2020, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      2.0.0
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/trakt#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/trakt#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @connect      api.trakt.tv
// @grant        GM.xmlHttpRequest
// ==/UserScript==
this.Trakt=function(){const e={"/episodes/summary":{method:"GET",url:"/shows/{id}/seasons/{season}/episodes/{episode}?extended"},"/movies/summary":{method:"GET",url:"/movies/{id}?extended"},"/search/id":{method:"GET",url:"/search/{id_type}/{id}?type"},"/search/query":{method:"GET",url:"/search/{type}?query&extended"},"/seasons/season":{method:"GET",url:"/shows/{id}/seasons/{season}?translations&extended"},"/seasons/summary":{method:"GET",url:"/shows/{id}/seasons?extended"},"/shows/summary":{method:"GET",url:"/shows/{id}?extended"}};return class{constructor(e={}){if(!e.client_id)throw new Error("Trakt Client ID is required");this._config={client_id:e.client_id,api_url:e.api_url||"https://api.trakt.tv",debug:e.debug||!1},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8","trakt-api-key":this._config.client_id,"trakt-api-version":2},this._debug=e=>{(this._config.debug||200!==e.status)&&console.log(`${e.status}: ${e.finalUrl}`)},this._this=this,this._methods()}_methods(){for(const s in e){const t=s.split("/"),o=t.pop();t.shift();let r=this._this;for(const e of t)r=r[e]||(r[e]={});r[o]=this._request.bind(this,e[s])}}_request(e,s){return new Promise(((t,o)=>{const r=this._resolve(e,s);GM.xmlHttpRequest({method:e.method,url:r,headers:this._headers,timeout:15e3,onload:e=>{this._debug(e);const s=JSON.parse(e.responseText);4===e.readyState&&200===e.status?t(s):s.status_message?o(new Error(s.status_message)):o(new Error("No results"))},onerror:()=>{o(new Error("An error occurs while processing the request"))},ontimeout:()=>{o(new Error("Request times out"))}})}))}_resolve(e,s){const t=this._config.api_url,o=e.url.split("?"),r=[],i=[];if(o[0])if(s){const e=new RegExp(Object.keys(s).map((e=>`{${e}}`)).join("|"),"gi");r.push(o[0].replace(e,(e=>s[e.replace(/[{}]/g,"")])))}else r.push(o[0]);if(o[1])for(const e of o[1].split("&")){new RegExp(Object.keys(s).map((e=>`{${e}}`)).join("|"),"gi").test(e)&&i.push(`${e}=${s[e]}`)}return`${t}${r.join("")} ${i.length>0?`?${i.join(" & ")}`:""}`}}}();
