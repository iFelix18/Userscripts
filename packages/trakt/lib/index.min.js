// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/trakt
// @description  Trakt API for my userscripts
// @copyright    2020, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      2.2.1
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/trakt#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/trakt#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @connect      api.trakt.tv
// @grant        GM.xmlHttpRequest
// ==/UserScript==
this.Trakt=function(){const e={"/episodes/summary":{extended:["full"],method:"GET",optional:[],url:"/shows/{id}/seasons/{season}/episodes/{episode}"},"/episodes/translations":{method:"GET",optional:["language"],url:"/shows/{id}/seasons/{season}/episodes/{episode}/translations/{language}"},"/movies/summary":{extended:["full"],method:"GET",optional:[],url:"/movies/{id}"},"/movies/translations":{method:"GET",optional:["language"],url:"/movies/{id}/translations/{language}"},"/search/id":{extended:["full"],method:"GET",optional:["type"],url:"/search/{id_type}/{id}?type"},"/search/query":{extended:["full"],method:"GET",optional:["fields"],url:"/search/{type}?query&fields"},"/seasons/season":{extended:["full"],method:"GET",optional:["translations"],url:"/shows/{id}/seasons/{season}?translations"},"/seasons/summary":{extended:["full","episodes"],method:"GET",optional:[],url:"/shows/{id}/seasons"},"/shows/summary":{extended:["full"],method:"GET",optional:[],url:"/shows/{id}"},"/shows/translations":{method:"GET",optional:["language"],url:"/shows/{id}/translations/{language}"}};return class{constructor(e={}){if(!e.client_id)throw new Error("Trakt Client ID is required");this._config={client_id:e.client_id,api_url:e.api_url||"https://api.trakt.tv",debug:e.debug||!1},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8","trakt-api-key":this._config.client_id,"trakt-api-version":2},this._methods()}_this(){return this}_debug(e){(this._config.debug||200!==e.status)&&console.log(`${e.status}: ${e.finalUrl}`)}_methods(){for(const s in e){const t=s.split("/"),o=t.pop();t.shift();let n=this._this();for(const e of t)n=n[e]||(n[e]={});n[o]=this._request.bind(this,e[s])}}_request(e,s){return new Promise(((t,o)=>{GM.xmlHttpRequest({method:e.method,url:this._resolve(e,s),headers:this._headers,timeout:15e3,onload:e=>{this._debug(e);const s=e.responseText?JSON.parse(e.responseText):void 0;s&&4===e.readyState&&200===e.status?t(s):s&&s.status_message?o(new Error(s.status_message)):o(new Error("No results"))},onerror:()=>{o(new Error("An error occurs while processing the request"))},ontimeout:()=>{o(new Error("Request times out"))}})}))}_resolve(e,s){const t=e.url.split("?"),o=s?new Set(Object.keys(s).map((e=>`${e}`))):{},n=[],i=[];if(t[0])for(let i of t[0].split("/"))if(/\{.+?\}/.test(i)){if(i=i.replace(/[{}]/g,""),s&&o.has(i))n.push(encodeURIComponent(s[i]));else if(!e.optional.includes(i))throw new Error(`Missing parameter: ${i}`)}else n.push(i);if(t[1])for(const n of t[1].split("&"))if(s&&o.has(n))i.push(`${n}=${encodeURIComponent(s[n])}`);else if(!e.optional.includes(n))throw new Error(`Missing parameter: ${n}`);e.extended&&s.extended&&e.extended.includes(s.extended)&&i.push(`extended=${s.extended}`);return`${this._config.api_url}${n.join("/")}${i.length>0?`?${i.join("&")}`:""}`}}}();
