// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/utils
// @description  Utils for my userscripts
// @copyright    2019, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      6.3.0
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/utils#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/utils#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @grant        GM.deleteValue
// @grant        GM.getValue
// @grant        GM.setValue
// ==/UserScript==
this.UU=function(){const e={},o=GM.info.script.name,t=GM.info.script.version,n=/^(.*?)\s<\S[^\s@]*@\S[^\s.]*\.\S+>$/.exec(GM.info.script.author),r=n?n[1]:GM.info.script.author;let i=o.toLowerCase().replace(/\s/g,"-"),s=!1;const a=e=>new Promise((o=>{new IntersectionObserver((e=>{$.each(e,((e,t)=>{o(t.intersectionRatio>0)}))}),{rootMargin:"0px",threshold:1}).observe(e)})),l=()=>{new MutationObserver((()=>{$.each(e,(o=>{$(o).each(((t,n)=>{const r=!e[o].onlyFirstMatch||!e[o].onlyFirstMatch;return(async(o,t)=>{const n=!e[o].onlyVisible||await a(t);!$(t).data(i)&&n&&($(t).data(i,1),e[o].callback.call(t,t),e[o].onlyFirstMatch&&delete e[o])})(o,n),r}))}))})).observe(document,{attributes:!0,childList:!0,subtree:!0})};return{init:async(e={})=>{i=e.id,s="boolean"==typeof e.logging&&e.logging;if(console.info(`%c${o}\n%cv${t}${r?` by ${r}`:""} is running!`,"color:red;font-weight:700;font-size:18px;text-transform:uppercase",""),e.id&&e.logging){let e=await GM.getValue(i);e=JSON.parse(e);for(const t in e)Object.hasOwnProperty.call(e,t)&&console.log(`${o}:`,`${t} is "${e[t]}"`)}},log:e=>{s&&console.log(`${o}:`,e)},error:e=>{console.error(`${o}:`,e)},warn:e=>{console.warn(`${o}:`,e)},alert:e=>{window.alert(`${o}: ${e}`)},short:(e,o)=>e.split(" ").length>Number(o)?`${e.split(" ",Number(o)).join(" ")} [...]`:e,migrateConfig:async(e,o)=>{if(!e)throw new Error("An old config ID is required");if(!o)throw new Error("An new config ID is required");const t=await GM.getValue(e);t&&(GM.setValue(o,t),GM.deleteValue(e),window.location.reload(!1))},observe:{creation:(o,t,n={})=>{$.extend(e,{[o]:{callback:t,onlyVisible:"boolean"==typeof n.onlyVisible&&n.onlyVisible,onlyFirstMatch:"boolean"==typeof n.onlyFirstMatch&&n.onlyFirstMatch}}),l()}}}}();
