// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/utils
// @description  Utils for my userscripts
// @copyright    2019, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      6.2.2
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/utils#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/utils#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @grant        GM.deleteValue
// @grant        GM.getValue
// @grant        GM.setValue
// ==/UserScript==
this.UU=function(){const e={},o=GM.info.script.name,n=GM.info.script.version,i=/^(.*?)\s<\S[^\s@]*@\S[^\s.]*\.\S+>$/.exec(GM.info.script.author),r=i?i[1]:GM.info.script.author;let t=o.toLowerCase().replace(/\s/g,"-"),s=!1;const a=e=>new Promise((o=>{new IntersectionObserver((e=>{$.each(e,((e,n)=>{o(n.intersectionRatio>0)}))}),{rootMargin:"0px",threshold:1}).observe(e)})),l=()=>{new MutationObserver((()=>{$.each(e,(o=>{$(o).each(((n,i)=>{(async(o,n)=>{const i=!e[o].onlyVisible||await a(n);!$(n).data(t)&&i&&($(n).data(t,1),e[o].callback.call(n,n))})(o,i)}))}))})).observe(document,{attributes:!0,childList:!0,subtree:!0})};return{init:async(e={})=>{t=e.id,s="boolean"==typeof e.logging&&e.logging;if(console.info(`%c${o}\n%cv${n}${r?` by ${r}`:""} is running!`,"color:red;font-weight:700;font-size:18px;text-transform:uppercase",""),e.id&&e.logging){let e=await GM.getValue(t);e=JSON.parse(e);for(const n in e)Object.hasOwnProperty.call(e,n)&&console.log(`${o}:`,`${n} is "${e[n]}"`)}},log:e=>{s&&console.log(`${o}:`,e)},error:e=>{console.error(`${o}:`,e)},warn:e=>{console.warn(`${o}:`,e)},alert:e=>{window.alert(`${o}: ${e}`)},short:(e,o)=>e.split(" ").length>Number(o)?`${e.split(" ",Number(o)).join(" ")} [...]`:e,migrateConfig:async(e,o)=>{if(!e)throw new Error("An old config ID is required");if(!o)throw new Error("An new config ID is required");const n=await GM.getValue(e);n&&(GM.setValue(o,n),GM.deleteValue(e),window.location.reload(!1))},observe:{creation:(o,n,i={})=>{$.extend(e,{[o]:{callback:n,onlyVisible:"boolean"==typeof i.onlyVisible&&i.onlyVisible}}),l()}}}}();
