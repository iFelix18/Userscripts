// ==UserScript==
// @author       Davide <iFelix18@protonmail.com>
// @namespace    https://github.com/iFelix18
// @exclude      *
// ==UserLibrary==
// @name         @ifelix18/rottentomatoes
// @description  Rotten Tomatoes API for my userscripts
// @copyright    2022, Davide (https://github.com/iFelix18)
// @license      MIT
// @version      3.0.0
// @homepage     https://github.com/iFelix18/Userscripts/tree/master/packages/rottentomatoes#readme
// @homepageURL  https://github.com/iFelix18/Userscripts/tree/master/packages/rottentomatoes#readme
// @supportURL   https://github.com/iFelix18/Userscripts/issues
// ==/UserLibrary==
// @connect      rottentomatoes.com
// @grant        GM.getValue
// @grant        GM.setValue
// @grant        GM.xmlHttpRequest
// ==/UserScript==
this.RottenTomatoes=function(){const t={"/search":{method:"GET",optional:["type"],url:"/search/?q={query}&t={type}"}};return class{constructor(t={},e=t.cache||{}){this._config={api_url:t.api_url||"https://www.rottentomatoes.com/api/private/v2.0",limit:t.limit||25,debug:t.debug||!1},this._cache={active:e.active||!1,TTL:1e3*(e.time_to_live||3600)},this._headers={"User-Agent":"Mozilla/5.0","Content-Type":"application/json;charset=utf-8"},this._methods()}_this(){return this}_debug(t){this._config.debug&&console.log(`${t.status} - ${t.finalURL}`)}async _crypto(t){const e=await crypto.subtle.digest("SHA-256",(new TextEncoder).encode(t));return[...new Uint8Array(e)].map((t=>t.toString(16).padStart(2,"0"))).join("")}_methods(){for(const e in t){const s=e.split("/"),i=s.pop();s.shift();let o=this._this();for(const t of s)o=o[t]||(o[t]={});o[i]=this._request.bind(this,t[e])}}async _request(t,e){if(!e)throw new Error("Parameters is required");const s=this._resolve(t,e),i=await this._crypto(s).then().catch((t=>new Error(t))),o=await GM.getValue(i);return new Promise(((e,i)=>{this._cache.active&&o&&Date.now()-o.time<this._cache.TTL?(this._debug({status:"cached",finalURL:s}),e(o.data)):GM.xmlHttpRequest({method:t.method,url:s,headers:this._headers,timeout:15e3,onload:t=>{this._debug({status:t.status,finalURL:s});const o=JSON.parse(t.responseText);4===t.readyState&&200===t.status?e(o):i(new Error("No results"))},onerror:()=>{i(new Error("An error occurs while processing the request"))},ontimeout:()=>{i(new Error("Request times out"))}})}))}_resolve(t,e){const s=t.url.split("?"),i=e?new Set(Object.keys(e).map((t=>`${t}`))):{},o=[],r=[];if(s[0]&&o.push(s[0]),s[1])for(const o of s[1].split("&")){const s=/{(\w+)}/g.exec(o)[1],n=new RegExp(Object.keys(e).map((t=>`{${t}}`)).join("|"),"gi");if(i.has(s))r.push(o.replace(n,(t=>encodeURIComponent(e[t.replace(/[{}]/g,"")]))));else if(!t.optional.includes(s))throw new Error(`Missing parameter => ${s}`)}this._config.limit&&r.push(`limit=${this._config.limit}`);return`${this._config.api_url}${o.join("/")}${r.length>0?`?${r.join("&")}`:""}`}}}();
